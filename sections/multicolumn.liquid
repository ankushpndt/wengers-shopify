{{ 'section-multicolumn.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top }}px;
    padding-bottom: {{ section.settings.padding_bottom }}px;
  }
  @media screen and (max-width: 991px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top | times: 0.5 | round: 0 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.5 | round: 0 }}px;
    }
  }
{%- endstyle -%}

{%- liquid
  assign columns_mobile_int = section.settings.columns_mobile | plus: 0
  assign show_mobile_slider = false
  if section.settings.swipe_on_mobile and section.blocks.size > columns_mobile_int
    assign show_mobile_slider = true
  endif

  assign show_desktop_slider = false
  if section.settings.enable_desktop_slider and section.blocks.size > section.settings.columns_desktop
    assign show_desktop_slider = true
  endif
-%}

<div class="multicolumn color-{{ section.settings.color_scheme }} gradient">
  <div
    class="slider-arrow--inline {% unless section.settings.full_width %} page-width {% else %} section--full-width {% endunless %} section-{{ section.id }}-padding isolate {% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
    {% if settings.animations_reveal_on_scroll %}
      data-cascade
    {% endif %}
  >
    <slider-component class="slider-mobile-gutter{% if show_desktop_slider %} slider-component-desktop {% endif %}">
      <div class="heading-top {{ section.settings.heading_position }} {% if section.settings.title == blank and section.settings.subtitle == blank %}heading-topend{% endif %} {% if section.settings.title == blank and section.settings.subtitle == blank and section.settings.button_label == blank %}heading-mnone{% endif %}">
        <div class="heading inline-richtext {{ section.settings.subheading_position }} {% if section.settings.title != blank %}sub_order_change{% endif %}">
          {%- if section.settings.subtitle != blank -%}
            <div class="heading_submain">
              <div class="heading_subtitle {% if section.settings.subheading_style == 'link' %}head_normal{% elsif section.settings.subheading_style == 'solid' %}button{% else %}button button--secondary{% endif %}">
                {{ section.settings.subtitle }}
              </div>
            </div>
          {%- endif -%}
          {%- if section.settings.title != blank -%}
            <h2 class="{{ section.settings.heading_size }}">
              {{ section.settings.title }}
            </h2>
          {%- endif %}
        </div>
        <div class="wb_button_combo{% if section.settings.button_label == blank %} bcombo_auto{% endif %}">
          {%- if section.settings.button_label != blank -%}
            <div class="wb_home_sbtn">
              <a
                {% if section.settings.button_link == blank %}
                  role="link" aria-disabled="true"
                {% else %}
                  href="{{ section.settings.button_link }}"
                {% endif %}
                class="{% if section.settings.view_all_style == 'link' %} link underlined-link{% elsif section.settings.view_all_style == 'solid' %} button {% else %} button button--secondary {% endif %}"
              >
                {{- section.settings.button_label | escape -}}
              </a>
            </div>
          {%- endif -%}
        </div>
      </div>
      <div class="wb_home_sbtn slider-buttons no-js-hidden {% unless show_desktop_slider %} desktop-arrows-hide {% endunless %}{% unless show_mobile_slider %} mobile-arrows-hide {% endunless %}">
        <button
          type="button"
          class="slider-button slider-button--prev button"
          name="previous"
          aria-label="{{ 'general.slider.previous_slide' | t }}"
          id="slider-button--prev-{{ section.id }}"
          aria-controls="slider-button--prev-{{ section.id }}"
        >
          {% render 'icon-caret' %}
        </button>
      </div>
      <ul
        class="multicolumn-list contains-content-container grid grid--{{ section.settings.columns_mobile }}-col-tablet-down grid--3-col-tablet grid--{{ section.settings.columns_desktop }}-col-desktop{% if show_mobile_slider or show_desktop_slider %} slider{% if show_desktop_slider %} slider--desktop{% endif %}{% if show_mobile_slider %} slider--tablet{% endif %}{% endif %}"
        id="Slider-{{ section.id }}"
      >
        {%- liquid
          assign highest_ratio = 0
          for block in section.blocks
            if block.settings.image.aspect_ratio > highest_ratio
              assign highest_ratio = block.settings.image.aspect_ratio
            endif
          endfor
        -%}
        {%- for block in section.blocks -%}
          {%- liquid
            assign mod = forloop.index | modulo: 2
            assign empty_column = ''
            if block.settings.image == blank and block.settings.multi_icon == 'none' and block.settings.title == blank and block.settings.text == blank and block.settings.link_label == blank
              assign empty_column = ' multicolumn-list__item--empty'
            endif
          -%}
          {% if mod == 0 %}
            <li
              id="Slide-{{ section.id }}-{{ forloop.index }}"
              class="multieven multicolumn-list__item grid__item{% if show_mobile_slider or show_desktop_slider %} slider__slide{% endif %}{{ empty_column }} {% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
              {{ block.shopify_attributes }}
              {% if settings.animations_reveal_on_scroll %}
                data-cascade
                style="--animation-order: {{ forloop.index }};"
              {% endif %}
              {{ block.shopify_attributes }}
            >
              <div class="multicolumn-card content-container">
                <div
                  class="multicolumn-card__info {{ section.settings.column_alignment }} color-{{ block.settings.card_color_scheme }} gradient"
                  {% if block.settings.imgtxt_bg != blank %}
                    style="background-image: url('{{ block.settings.imgtxt_bg | image_url: width: 700 }}');"
                  {% endif %}
                >
                  {% render 'icon-accordion', icon: block.settings.multi_icon %}

                  {%- if block.settings.title != blank -%}
                    <h3 class="inline-richtext head_col">{{ block.settings.title }}</h3>
                  {%- endif -%}
                  {%- if block.settings.text != blank -%}
                    <div class="rte">{{ block.settings.text }}</div>
                  {%- endif -%}
                  {%- if block.settings.link_label != blank -%}
                    <a
                      class="{% if block.settings.button_style == 'link' %}link underlined-link{% elsif block.settings.button_style == 'solid' %}button{% else %}button button--secondary{% endif %}"
                      {% if block.settings.link == blank %}
                        role="link" aria-disabled="true"
                        aria-disabled="true"
                      {% else %}
                        href="{{ block.settings.link }}"
                      {% endif %}
                    >
                      {{- block.settings.link_label | escape -}}
                    </a>
                  {%- endif -%}
                </div>
                {% if section.settings.image_ratio == 'adapt' or section.settings.image_ratio == 'circle' %}
                  {% assign spaced_image = true %}
                {% endif %}
                <div class="multicolumn-card__image-wrapper {% if section.settings.image_width != 'full' or spaced_image %} multicolumn-card-spacing{% endif %}">
                  <div class="multicolumn-card__image-wrapper--{{ section.settings.image_width }}-width  image__wrapper">
                    {%- if block.settings.image != blank -%}
                      <div
                        class="media media--transparent media--{{ section.settings.image_ratio }}"
                        {% if section.settings.image_ratio == 'adapt' %}
                          style="padding-bottom: {{ 1 | divided_by: block.settings.image.aspect_ratio | times: 100 }}%;"
                        {% endif %}
                      >
                        {%- liquid
                          assign number_of_columns = section.settings.columns_desktop
                          assign number_of_columns_mobile = section.settings.columns_mobile
                          assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                          assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                          assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                          if section.settings.image_width == 'half'
                            assign image_width = 0.5
                          elsif section.settings.image_width == 'third'
                            assign image_width = 0.33
                          else
                            assign image_width = 1
                          endif
                        -%}
                        {% capture sizes %}
                          (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                          (min-width: 992px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                          (min-width: 768px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                          calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                        {% endcapture %}

                        {{
                          block.settings.image
                          | image_url: width: 3200
                          | image_tag:
                            loading: 'lazy',
                            widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                            sizes: sizes,
                            class: 'multicolumn-card__image'
                        }}
                      </div>
                    {% else %}
                      {%- assign placeholder_slide = forloop.index | modulo: 2 -%}
                      {%- if placeholder_slide == 1 -%}
                        {{ 'hero-apparel-1' | placeholder_svg_tag: 'placeholder-svg' }}
                      {%- else -%}
                        {{ 'hero-apparel-2' | placeholder_svg_tag: 'placeholder-svg' }}
                      {%- endif -%}
                    {% endif %}
                  </div>
                </div>
                {%- if block.settings.link_label == blank and block.settings.link != blank -%}
                  <a class="full-image-link" href="{{ block.settings.link }}"></a>
                {%- endif -%}
              </div>
            </li>
          {% else %}
            <li
              id="Slide-{{ section.id }}-{{ forloop.index }}"
              class="multiodd multicolumn-list__item grid__item{% if show_mobile_slider or show_desktop_slider %} slider__slide{% endif %}{{ empty_column }} {% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
              {{ block.shopify_attributes }}
              {% if settings.animations_reveal_on_scroll %}
                data-cascade
                style="--animation-order: {{ forloop.index }};"
              {% endif %}
              {{ block.shopify_attributes }}
            >
              <div class="multicolumn-card content-container">
                {% if section.settings.image_ratio == 'adapt' or section.settings.image_ratio == 'circle' %}
                  {% assign spaced_image = true %}
                {% endif %}
                <div class="multicolumn-card__image-wrapper {% if section.settings.image_width != 'full' or spaced_image %} multicolumn-card-spacing{% endif %}">
                  <div class="multicolumn-card__image-wrapper--{{ section.settings.image_width }}-width  image__wrapper">
                    {%- if block.settings.image != blank -%}
                      <div
                        class="media media--transparent media--{{ section.settings.image_ratio }}"
                        {% if section.settings.image_ratio == 'adapt' %}
                          style="padding-bottom: {{ 1 | divided_by: block.settings.image.aspect_ratio | times: 100 }}%;"
                        {% endif %}
                      >
                        {%- liquid
                          assign number_of_columns = section.settings.columns_desktop
                          assign number_of_columns_mobile = section.settings.columns_mobile
                          assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                          assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                          assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                          if section.settings.image_width == 'half'
                            assign image_width = 0.5
                          elsif section.settings.image_width == 'third'
                            assign image_width = 0.33
                          else
                            assign image_width = 1
                          endif
                        -%}
                        {% capture sizes %}
                        (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                        (min-width: 992px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                        (min-width: 768px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                        calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                      {% endcapture %}

                        {{
                          block.settings.image
                          | image_url: width: 3200
                          | image_tag:
                            loading: 'lazy',
                            widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                            sizes: sizes,
                            class: 'multicolumn-card__image'
                        }}
                      </div>
                    {% else %}
                      {%- assign placeholder_slide = forloop.index | modulo: 2 -%}
                      {%- if placeholder_slide == 1 -%}
                        {{ 'hero-apparel-1' | placeholder_svg_tag: 'placeholder-svg' }}
                      {%- else -%}
                        {{ 'hero-apparel-2' | placeholder_svg_tag: 'placeholder-svg' }}
                      {%- endif -%}
                    {% endif %}
                  </div>
                </div>
                {%- if block.settings.link_label == blank and block.settings.link != blank -%}
                  <a class="full-image-link" href="{{ block.settings.link }}"></a>
                {%- endif -%}
                <div
                  class="multicolumn-card__info {{ section.settings.column_alignment }} color-{{ block.settings.card_color_scheme }} gradient"
                  {% if block.settings.imgtxt_bg != blank %}
                    style="background-image: url('{{ block.settings.imgtxt_bg | image_url: width: 700 }}');"
                  {% endif %}
                >
                  {% render 'icon-accordion', icon: block.settings.multi_icon %}

                  {%- if block.settings.title != blank -%}
                    <h3 class="inline-richtext head_col">{{ block.settings.title }}</h3>
                  {%- endif -%}
                  {%- if block.settings.text != blank -%}
                    <div class="rte">{{ block.settings.text }}</div>
                  {%- endif -%}
                  {%- if block.settings.link_label != blank -%}
                    <a
                      class="{% if block.settings.button_style == 'link' %}link underlined-link{% elsif block.settings.button_style == 'solid' %}button{% else %}button button--secondary{% endif %}"
                      {% if block.settings.link == blank %}
                        role="link" aria-disabled="true"
                        aria-disabled="true"
                      {% else %}
                        href="{{ block.settings.link }}"
                      {% endif %}
                    >
                      {{- block.settings.link_label | escape -}}
                    </a>
                  {%- endif -%}
                </div>
              </div>
            </li>
          {% endif %}
        {%- endfor -%}
      </ul>
      <div class="wb_home_sbtn slider-buttons no-js-hidden {% unless show_desktop_slider %} desktop-arrows-hide {% endunless %}{% unless show_mobile_slider %} mobile-arrows-hide {% endunless %}">
        <button
          type="button"
          class="slider-button slider-button--next button"
          name="next"
          aria-label="{{ 'general.slider.next_slide' | t }}"
          id="slider-button--next-{{ section.id }}"
          aria-controls="slider-button--next-{{ section.id }}"
        >
          {% render 'icon-caret' %}
        </button>
      </div>
    </slider-component>
  </div>
</div>

{% schema %}
{
  "name": "t:sections.multicolumn.name",
  "class": "section",
  "tag": "section",
  "max_blocks": 8,
  "disabled_on": {
    "groups": ["header", "footer", "aside"]
  },
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "background-1"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "t:sections.video.settings.full_width.label",
      "default": true
    },
    {
      "type": "header",
      "content": "t:settings_schema.heading.head"
    },
    {
      "type": "inline_richtext",
      "id": "title",
      "default": "Multicolumn",
      "label": "t:settings_schema.heading.settings.head_text.label_3"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        }
      ],
      "default": "h2",
      "label": "t:settings_schema.heading.settings.head_text.label_1"
    },
    {
      "type": "header",
      "content": "t:settings_schema.heading.sub_head"
    },
    {
      "type": "text",
      "id": "subtitle",
      "default": "Sub heading",
      "label": "t:settings_schema.heading.settings.sub_text.label_1"
    },
    {
      "type": "select",
      "id": "subheading_style",
      "label": "t:settings_schema.heading.settings.sub_text.label_2",
      "options": [
        {
          "value": "link",
          "label": "t:sections.collection-list.settings.subheading_style.options__1.label"
        },
        {
          "value": "outline",
          "label": "t:sections.collection-list.settings.subheading_style.options__2.label"
        },
        {
          "value": "solid",
          "label": "t:sections.collection-list.settings.subheading_style.options__3.label"
        }
      ],
      "default": "link"
    },
    {
      "type": "select",
      "id": "subheading_position",
      "label": "t:settings_schema.heading.settings.sub_text.label_3",
      "options": [
        {
          "value": "before_head",
          "label": "t:sections.collection-list.settings.subheading_position.options__1.label"
        },
        {
          "value": "after_head",
          "label": "t:sections.collection-list.settings.subheading_position.options__2.label"
        }
      ],
      "default": "after_head"
    },
    {
      "type": "select",
      "id": "heading_position",
      "options": [
        {
          "value": "left",
          "label": "t:sections.all.heading_position.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.all.heading_position.options__2.label"
        }
      ],
      "default": "left",
      "label": "t:settings_schema.heading.settings.head_text.label_2"
    },

    {
      "type": "select",
      "id": "image_width",
      "options": [
        {
          "value": "third",
          "label": "t:sections.multicolumn.settings.image_width.options__1.label"
        },
        {
          "value": "half",
          "label": "t:sections.multicolumn.settings.image_width.options__2.label"
        },
        {
          "value": "full",
          "label": "t:sections.multicolumn.settings.image_width.options__3.label"
        }
      ],
      "default": "full",
      "label": "t:sections.multicolumn.settings.image_width.label"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.multicolumn.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.multicolumn.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.multicolumn.settings.image_ratio.options__3.label"
        },
        {
          "value": "circle",
          "label": "t:sections.multicolumn.settings.image_ratio.options__4.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.multicolumn.settings.image_ratio.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 2,
      "max": 4,
      "step": 1,
      "default": 4,
      "label": "t:sections.multicolumn.settings.columns_desktop.label"
    },
    {
      "type": "checkbox",
      "id": "enable_desktop_slider",
      "label": "t:sections.featured-collection.settings.enable_desktop_slider.label",
      "default": false
    },
    {
      "type": "select",
      "id": "column_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.multicolumn.settings.column_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.multicolumn.settings.column_alignment.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.multicolumn.settings.column_alignment.options__3.label"
        }
      ],
      "default": "left",
      "label": "t:sections.multicolumn.settings.column_alignment.label"
    },
    {
      "type": "header",
      "content": "t:settings_schema.button.view_name"
    },
    {
      "type": "text",
      "id": "button_label",
      "default": "View all",
      "label": "t:settings_schema.button.settings.vbutton_text.label_1"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "t:settings_schema.button.settings.button_text.label_2"
    },
    {
      "type": "select",
      "id": "view_all_style",
      "label": "t:settings_schema.button.settings.vbutton_text.label_3",
      "options": [
        {
          "value": "link",
          "label": "t:sections.featured-collection.settings.view_all_style.options__1.label"
        },
        {
          "value": "outline",
          "label": "t:sections.featured-collection.settings.view_all_style.options__2.label"
        },
        {
          "value": "solid",
          "label": "t:sections.featured-collection.settings.view_all_style.options__3.label"
        }
      ],
      "default": "link"
    },
    {
      "type": "header",
      "content": "t:sections.multicolumn.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "options": [
        {
          "value": "1",
          "label": "t:sections.multicolumn.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.multicolumn.settings.columns_mobile.options__2.label"
        }
      ],
      "default": "1",
      "label": "t:sections.multicolumn.settings.columns_mobile.label"
    },
    {
      "type": "checkbox",
      "id": "swipe_on_mobile",
      "default": false,
      "label": "t:sections.multicolumn.settings.swipe_on_mobile.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 60
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 60
    }
  ],
  "blocks": [
    {
      "type": "column",
      "name": "t:sections.multicolumn.blocks.column.name",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:sections.multicolumn.blocks.column.settings.image.label"
        },
        {
          "type": "select",
          "id": "multi_icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "check_mark",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        },
        {
          "type": "inline_richtext",
          "id": "title",
          "default": "Column",
          "label": "t:sections.multicolumn.blocks.column.settings.title.label"
        },
        {
          "type": "richtext",
          "id": "text",
          "default": "<p>Pair text with an image to focus on your chosen product, collection, or blog post. Add details on availability, style, or even provide a review.</p>",
          "label": "t:sections.multicolumn.blocks.column.settings.text.label"
        },
        {
          "type": "header",
          "content": "t:settings_schema.button.name"
        },
        {
          "type": "text",
          "id": "link_label",
          "label": "t:settings_schema.button.settings.button_text.label_1"
        },
        {
          "type": "url",
          "id": "link",
          "label": "t:settings_schema.button.settings.button_text.label_2"
        },
        {
          "type": "select",
          "id": "button_style",
          "label": "t:settings_schema.button.settings.button_text.label_3",
          "options": [
            {
              "value": "link",
              "label": "t:sections.featured-collection.settings.view_all_style.options__1.label"
            },
            {
              "value": "outline",
              "label": "t:sections.featured-collection.settings.view_all_style.options__2.label"
            },
            {
              "value": "solid",
              "label": "t:sections.featured-collection.settings.view_all_style.options__3.label"
            }
          ],
          "default": "solid"
        },
        {
          "type": "image_picker",
          "id": "imgtxt_bg",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.imgtxt_bg.label"
        },
        {
          "type": "color_scheme",
          "id": "card_color_scheme",
          "label": "t:sections.all.colors.label",
          "default": "background-2"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.multicolumn.presets.name",
      "blocks": [
        {
          "type": "column"
        },
        {
          "type": "column"
        },
        {
          "type": "column"
        },
        {
          "type": "column"
        }
      ]
    }
  ]
}
{% endschema %}
